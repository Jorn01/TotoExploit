const imageData = document.getElementById("imageToRecognise")
var croppedImages;
cropToObjects(imageData);
async function cropToObjects(imageData) {
    // Load the model
    const modelUrl = 'http://localhost:8000/model.json';
    const model = await tf.loadGraphModel(modelUrl);
  
    // Decode the image
    const image = tf.node.decodeImage(imageData);
  
    // Run the model to make predictions
    const input = tf.expandDims(image, 0);
    const predictions = await model.predict(input).data();
  
    // Extract the bounding boxes from the predictions
    function getBoundingBoxes(predictions) {
      const boxes = [];
      for (let i = 0; i < predictions.length; i += 4) {
        const ymin = predictions[i] * 100;
        const xmin = predictions[i + 1] * 100;
        const ymax = predictions[i + 2] * 100;
        const xmax = predictions[i + 3] * 100;
        boxes.push({ ymin, xmin, ymax, xmax });
      }
      return boxes;
    }
    const boxes = getBoundingBoxes(predictions);
  
    // Crop the image to the size of the bounding boxes
    croppedImages = [];
    for (const box of boxes) {
      const begin = [box.ymin, box.xmin, 0];
      const size = [box.ymax - box.ymin, box.xmax - box.xmin, 3];
      const cropped = tf.image.cropAndResize(image, [begin], [0], size);
      croppedImages.push(cropped);
    }
  
    return croppedImages;
  }
  
  console.log(croppedImages)